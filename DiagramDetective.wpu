#!wing
#!version=8.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.err-values = {loc('main.py'): {},
                    loc('prime_gaps.py'): {}}
debug.show-args-dialog = {loc('main.py'): False,
                          loc('mathlib/main.py'): False,
                          loc('prime_gaps.py'): False}
edit.file-encoding = {loc('README.md'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'GZmsrhCJvulaSgrptfYMNyCVvAJLNPUr',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2886221294363257,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,),
        (2,),
        (4,)],
                                 'selected-nodes': [(2,
        7)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               0,
                               {}),
                              ('debug-stack',
                               'tall',
                               0,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               0,
                               {}),
                              ('refactoring',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1],
        'notebook_display': 'normal',
        'notebook_percent': 0.2737186477644493,
        'override_title': None,
        'pagelist': [('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'PyQt6.',
                                       'fReverse': False,
                                       'fSearchText': 'PyQt5.',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'False',
                                       'fReverse': False,
                                       'fSearchText': 'def font',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      0,
                      {'node-states': [('eval',
        'doc'),
                                       ('eval',
        'items'),
                                       ('eval',
        'scr_var'),
                                       ('eval',
        'self._imageMap')],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(3,)],
                                      'top-node': (0,)}}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('gfx/scene.py'),
        {'attrib-starts': [('Scene|0|',
                            11),
                           ('Scene|0|.__init__|0|',
                            15)],
         'code-line': '            S.setVisible(False)\r\n',
         'first-line': 0,
         'folded-linenos': [],
         'sel-line': 27,
         'sel-line-start': 894,
         'selection_end': 924,
         'selection_start': 924,
         'zoom': -2},
        1745888876.512653],
        [loc('gfx/scene.py'),
         {'attrib-starts': [('Scene|0|',
                             11),
                            ('Scene|0|.mouseDoubleClickEvent|0|',
                             47)],
          'code-line': '            \r\n',
          'first-line': 45,
          'folded-linenos': [],
          'sel-line': 63,
          'sel-line-start': 2222,
          'selection_end': 2234,
          'selection_start': 2234,
          'zoom': -2},
         1745888914.425998],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 2,
          'folded-linenos': [],
          'sel-line': 28,
          'sel-line-start': 2107,
          'selection_end': 2107,
          'selection_start': 2107,
          'zoom': 0},
         1745888915.8504856],
        [loc('gfx/scene.py'),
         {'attrib-starts': [('Scene|0|',
                             11),
                            ('Scene|0|.mouseDoubleClickEvent|0|',
                             47)],
          'code-line': '            \r\n',
          'first-line': 45,
          'folded-linenos': [],
          'sel-line': 69,
          'sel-line-start': 2435,
          'selection_end': 2447,
          'selection_start': 2447,
          'zoom': -2},
         1745889181.0996869],
        [loc('gfx/scene.py'),
         {'attrib-starts': [],
          'code-line': 'from PyQt5.QtCore import QPointF, Qt, QRectF, QTimer, pyqtSignal\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 2,
          'sel-line-start': 80,
          'selection_end': 144,
          'selection_start': 144,
          'zoom': -2},
         1745889318.1529398],
        [loc('main.py'),
         {'attrib-starts': [],
          'code-line': '    app = QApplication([])        \r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 13,
          'sel-line-start': 412,
          'selection_end': 435,
          'selection_start': 435,
          'zoom': 0},
         1745889318.161655],
        [loc('main.py'),
         {'attrib-starts': [],
          'code-line': '    scene = Scene()\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 18,
          'sel-line-start': 565,
          'selection_end': 582,
          'selection_start': 577,
          'zoom': 0},
         1745889318.319906],
        [loc('main.py'),
         {'attrib-starts': [],
          'code-line': '    window = QMainWindow()\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 483,
          'selection_end': 509,
          'selection_start': 509,
          'zoom': 0},
         1745893979.4714851],
        [loc('gfx/arrow.py'),
         {'attrib-starts': [],
          'code-line': 'from PyQt6.QtCore import QPointF, QLineF, Qt, QRectF, QTimer, pyqtSignal\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 3,
          'sel-line-start': 81,
          'selection_end': 92,
          'selection_start': 86,
          'zoom': 0},
         1745893996.2128906],
        [loc('gfx/base.py'),
         {'attrib-starts': [('Base|0|',
                             7)],
          'code-line': '    def setup_expand_to_scene(self):\r\n',
          'first-line': 120,
          'folded-linenos': [],
          'sel-line': 127,
          'sel-line-start': 4196,
          'selection_end': 4232,
          'selection_start': 4232,
          'zoom': 0},
         1745893997.0568924],
        [loc('gfx/connect_button.py'),
         {'attrib-starts': [('ConnectButton|0|',
                             3)],
          'code-line': '    def set_radius(self, radius: float):\r\n',
          'first-line': 34,
          'folded-linenos': [],
          'sel-line': 45,
          'sel-line-start': 1247,
          'selection_end': 1259,
          'selection_start': 1259,
          'zoom': 0},
         1745893998.284506],
        [loc('gfx/control_point.py'),
         {'attrib-starts': [('ControlPoint|0|',
                             7)],
          'code-line': '    def set_radius(self, radius):\r\n',
          'first-line': 56,
          'folded-linenos': [],
          'sel-line': 60,
          'sel-line-start': 2019,
          'selection_end': 2031,
          'selection_start': 2031,
          'zoom': 0},
         1745893998.7085054],
        [loc('gfx/directed_graph.py'),
         {'attrib-starts': [('DirectedGraph|0|',
                             9)],
          'code-line': '        \r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 12,
          'sel-line-start': 376,
          'selection_end': 380,
          'selection_start': 380,
          'zoom': 0},
         1745893998.8325024],
        [loc('gfx/graph_morphism.py'),
         {'attrib-starts': [('GraphMorphism|0|',
                             9),
                            ('GraphMorphism|0|._getReflection|0|',
                             204)],
          'code-line': '                elif isinstance(item, Arrow):\r\n',
          'first-line': 184,
          'folded-linenos': [],
          'sel-line': 211,
          'sel-line-start': 9197,
          'selection_end': 9234,
          'selection_start': 9234,
          'zoom': 0},
         1745893998.9685035],
        [loc('gfx/label.py'),
         {'attrib-starts': [('Label|0|',
                             4),
                            ('Label|0|.__repr__|0|',
                             45)],
          'code-line': "        return f'{self.text()}:Label(@{id(self)})'\r\n",
          'first-line': 22,
          'folded-linenos': [],
          'sel-line': 46,
          'sel-line-start': 1175,
          'selection_end': 1204,
          'selection_start': 1204,
          'zoom': 0},
         1745893999.4563146],
        [loc('main.py'),
         {'attrib-starts': [],
          'code-line': '    window = QMainWindow()\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 483,
          'selection_end': 509,
          'selection_start': 509,
          'zoom': 0},
         1745893999.5843143],
        [loc('gfx/node.py'),
         {'attrib-starts': [('Node|0|',
                             8)],
          'code-line': '    default_fill_brush = QBrush(SimpleBrush(QColor(100, 100, 100, 100)))\r\n',
          'first-line': 1,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 686,
          'selection_end': 755,
          'selection_start': 755,
          'zoom': 0},
         1745893999.7243183],
        [loc('core/qt_pickle_utility.py'),
         {'attrib-starts': [],
          'code-line': 'from PyQt6.QtGui import QBrush, QPen\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 36,
          'selection_start': 36,
          'zoom': 0},
         1745893999.827323],
        [loc('gfx/scene.py'),
         {'attrib-starts': [],
          'code-line': 'from PyQt6.QtCore import QPointF, Qt, QRectF, QTimer, pyqtSignal\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 2,
          'sel-line-start': 80,
          'selection_end': 144,
          'selection_start': 144,
          'zoom': -2},
         1745894000.5283153],
        [loc('core/utility.py'),
         {'attrib-starts': [('closest_point_on_path|0|',
                             12)],
          'code-line': '    return minVec.toPointF()\r\n',
          'first-line': 25,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1375,
          'selection_end': 1403,
          'selection_start': 1403,
          'zoom': 0},
         1745894000.611318]],
        20),
        'current-loc': loc('gfx/view.py'),
        'editor-state-list': [(loc('gfx/arrow.py'),
                               {'attrib-starts': [],
                                'code-line': 'from PyQt6.QtCore import QPointF, QLineF, Qt, QRectF, QTimer, pyqtSignal\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 3,
                                'sel-line-start': 81,
                                'selection_end': 92,
                                'selection_start': 86,
                                'zoom': 0}),
                              (loc('gfx/base.py'),
                               {'attrib-starts': [('Base|0|',
        7)],
                                'code-line': '    def setup_expand_to_scene(self):\r\n',
                                'first-line': 120,
                                'folded-linenos': [],
                                'sel-line': 127,
                                'sel-line-start': 4196,
                                'selection_end': 4232,
                                'selection_start': 4232,
                                'zoom': 0}),
                              (loc('gfx/connect_button.py'),
                               {'attrib-starts': [('ConnectButton|0|',
        3)],
                                'code-line': '    def set_radius(self, radius: float):\r\n',
                                'first-line': 34,
                                'folded-linenos': [],
                                'sel-line': 45,
                                'sel-line-start': 1247,
                                'selection_end': 1259,
                                'selection_start': 1259,
                                'zoom': 0}),
                              (loc('gfx/control_point.py'),
                               {'attrib-starts': [('ControlPoint|0|',
        7)],
                                'code-line': '    def set_radius(self, radius):\r\n',
                                'first-line': 56,
                                'folded-linenos': [],
                                'sel-line': 60,
                                'sel-line-start': 2019,
                                'selection_end': 2031,
                                'selection_start': 2031,
                                'zoom': 0}),
                              (loc('gfx/directed_graph.py'),
                               {'attrib-starts': [('DirectedGraph|0|',
        9)],
                                'code-line': '        \r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 12,
                                'sel-line-start': 376,
                                'selection_end': 380,
                                'selection_start': 380,
                                'zoom': 0}),
                              (loc('gfx/graph_morphism.py'),
                               {'attrib-starts': [('GraphMorphism|0|',
        9),
        ('GraphMorphism|0|._getReflection|0|',
         204)],
                                'code-line': '                elif isinstance(item, Arrow):\r\n',
                                'first-line': 184,
                                'folded-linenos': [],
                                'sel-line': 211,
                                'sel-line-start': 9197,
                                'selection_end': 9234,
                                'selection_start': 9234,
                                'zoom': 0}),
                              (loc('gfx/label.py'),
                               {'attrib-starts': [('Label|0|',
        4),
        ('Label|0|.__repr__|0|',
         45)],
                                'code-line': "        return f'{self.text()}:Label(@{id(self)})'\r\n",
                                'first-line': 22,
                                'folded-linenos': [],
                                'sel-line': 46,
                                'sel-line-start': 1175,
                                'selection_end': 1204,
                                'selection_start': 1204,
                                'zoom': 0}),
                              (loc('main.py'),
                               {'attrib-starts': [],
                                'code-line': '    window = QMainWindow()\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 15,
                                'sel-line-start': 483,
                                'selection_end': 509,
                                'selection_start': 509,
                                'zoom': 0}),
                              (loc('gfx/node.py'),
                               {'attrib-starts': [('Node|0|',
        8)],
                                'code-line': '    default_fill_brush = QBrush(SimpleBrush(QColor(100, 100, 100, 100)))\r\n',
                                'first-line': 1,
                                'folded-linenos': [],
                                'sel-line': 15,
                                'sel-line-start': 686,
                                'selection_end': 755,
                                'selection_start': 755,
                                'zoom': 0}),
                              (loc('mathlib/object.py'),
                               {'attrib-starts': [('Object|0|',
        2),
        ('Object|0|.finish_setup|0|',
         9)],
                                'code-line': '    \r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 11,
                                'sel-line-start': 280,
                                'selection_end': 284,
                                'selection_start': 284,
                                'zoom': 0}),
                              (loc('core/qt_pickle_utility.py'),
                               {'attrib-starts': [],
                                'code-line': 'from PyQt6.QtGui import QBrush, QPen\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 0,
                                'sel-line-start': 0,
                                'selection_end': 36,
                                'selection_start': 36,
                                'zoom': 0}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': '',
                                'first-line': 2,
                                'folded-linenos': [],
                                'sel-line': 28,
                                'sel-line-start': 2107,
                                'selection_end': 2107,
                                'selection_start': 2107,
                                'zoom': 0}),
                              (loc('gfx/scene.py'),
                               {'attrib-starts': [],
                                'code-line': 'from PyQt6.QtCore import QPointF, Qt, QRectF, QTimer, pyqtSignal\r\n',
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 2,
                                'sel-line-start': 80,
                                'selection_end': 144,
                                'selection_start': 144,
                                'zoom': -2}),
                              (loc('mathlib/semicategory.py'),
                               {'attrib-starts': [],
                                'code-line': 'from gfx.arrow import Arrow\r\n',
                                'first-line': 32,
                                'folded-linenos': [],
                                'sel-line': 3,
                                'sel-line-start': 120,
                                'selection_end': 147,
                                'selection_start': 147,
                                'zoom': 0}),
                              (loc('core/utility.py'),
                               {'attrib-starts': [('closest_point_on_path|0|',
        12)],
                                'code-line': '    return minVec.toPointF()\r\n',
                                'first-line': 25,
                                'folded-linenos': [],
                                'sel-line': 50,
                                'sel-line-start': 1375,
                                'selection_end': 1403,
                                'selection_start': 1403,
                                'zoom': 0}),
                              (loc('gfx/view.py'),
                               {'attrib-starts': [('View|0|',
        3),
        ('View|0|.setScene|0|',
         81)],
                                'code-line': '        self.zoom_in(times=3)',
                                'first-line': 62,
                                'folded-linenos': [],
                                'sel-line': 85,
                                'sel-line-start': 2814,
                                'selection_end': 2842,
                                'selection_start': 2842,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('gfx/arrow.py'),
         loc('gfx/base.py'),
         loc('gfx/connect_button.py'),
         loc('gfx/control_point.py'),
         loc('gfx/directed_graph.py'),
         loc('gfx/graph_morphism.py'),
         loc('gfx/label.py'),
         loc('main.py'),
         loc('gfx/node.py'),
         loc('mathlib/object.py'),
         loc('core/qt_pickle_utility.py'),
         loc('README.md'),
         loc('gfx/scene.py'),
         loc('mathlib/semicategory.py'),
         loc('core/utility.py'),
         loc('gfx/view.py')]),
                               'open_files': ['mathlib/object.py',
        'README.md',
        'mathlib/semicategory.py',
        'gfx/arrow.py',
        'gfx/base.py',
        'gfx/connect_button.py',
        'gfx/control_point.py',
        'gfx/directed_graph.py',
        'gfx/graph_morphism.py',
        'gfx/label.py',
        'main.py',
        'gfx/node.py',
        'core/qt_pickle_utility.py',
        'gfx/scene.py',
        'core/utility.py',
        'gfx/view.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.41611185086551267},
        'splits': 1,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           1),
                          1745893969.515813),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.7815964523281597},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1737255901.4731386),
                 'user_data': {}},
        'window-alloc': (-499,
                         -842,
                         1107,
                         740)}]}
guimgr.recent-documents = [loc('gfx/view.py'),
                           loc('core/utility.py'),
                           loc('gfx/scene.py'),
                           loc('core/qt_pickle_utility.py'),
                           loc('gfx/node.py'),
                           loc('main.py'),
                           loc('gfx/label.py'),
                           loc('gfx/graph_morphism.py'),
                           loc('gfx/directed_graph.py'),
                           loc('gfx/control_point.py'),
                           loc('gfx/connect_button.py'),
                           loc('gfx/base.py'),
                           loc('gfx/arrow.py'),
                           loc('mathlib/semicategory.py'),
                           loc('README.md'),
                           loc('mathlib/object.py')]
guimgr.visual-state = {loc('../../../../../Python313/Lib/site-packages/bidict/_base.py'): {'attrib-starts': [('BidictBase|0|',
        58),
        ('BidictBase|0|.__getitem__|0|',
         521)],
        'code-line': '        return self._fwdm[key]\n',
        'first-line': 511,
        'folded-linenos': [],
        'sel-line': 523,
        'sel-line-start': 23102,
        'selection_end': 23102,
        'selection_start': 23102,
        'zoom': 0},
                       loc('../../../../../Python313/Lib/site-packages/sympy/ntheory/generate.py'): {'attrib-starts': [('primorial|0|',
        902)],
        'code-line': '        raise ValueError("primorial argument must be >= 1")\n',
        'first-line': 936,
        'folded-linenos': [],
        'sel-line': 957,
        'sel-line-start': 28074,
        'selection_end': 28074,
        'selection_start': 28074,
        'zoom': 0},
                       loc('../BananaCats/core/geom_tools.py'): {'attrib-starts': [('closest_point_on_path|0|',
        336)],
        'code-line': '        p = QVector2D(poly.at(k))\n',
        'first-line': 331,
        'folded-linenos': [],
        'sel-line': 345,
        'sel-line-start': 9028,
        'selection_end': 9061,
        'selection_start': 9061,
        'zoom': 0},
                       loc('../BananaCats/core/graphics_highlighter.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtGui import QColor, QBrush, QPen\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../BananaCats/core/python_tools.py'): {'attrib-starts': [],
        'code-line': '\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../BananaCats/core/qt_tools.py'): {'attrib-starts': [],
        'code-line': 'class Pen(QPen):\n',
        'first-line': 305,
        'folded-linenos': [],
        'sel-line': 274,
        'sel-line-start': 8288,
        'selection_end': 9923,
        'selection_start': 8288,
        'zoom': 0},
                       loc('../BananaCats/widget/arrow.py'): {'attrib-starts': [('Arrow|0|',
        16),
        ('Arrow|0|.source_or_target_point|0|',
         882)],
        'code-line': '    ',
        'first-line': 874,
        'folded-linenos': [],
        'sel-line': 887,
        'sel-line-start': 32662,
        'selection_end': 32666,
        'selection_start': 32666,
        'zoom': 0},
                       loc('../BananaCats/widget/banana_cats.py'): {'attrib-starts': [],
        'code-line': 'class BananaCats(QGraphicsObject, SnapItem, SignalHelper):\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 728,
        'selection_end': 744,
        'selection_start': 734,
        'zoom': 0},
                       loc('../BananaCats/widget/control_point.py'): {'attrib-starts': [('ControlPoint|0|',
        9)],
        'code-line': '    def closest_boundary_point(self, pos):\n',
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 59,
        'sel-line-start': 1964,
        'selection_end': 2209,
        'selection_start': 1964,
        'zoom': 0},
                       loc('../BananaCats/widget/node.py'): {'attrib-starts': [('Node|0|',
        12)],
        'code-line': '    def update_shape(self):\n',
        'first-line': 280,
        'folded-linenos': [],
        'sel-line': 294,
        'sel-line-start': 11571,
        'selection_end': 11794,
        'selection_start': 11571,
        'zoom': 0},
                       loc('../Code/__Backup/AbstractSpacecraft/BananaCats/BananaCats/BananaCats/widget/view.py'): {'attrib-starts': [('View|0|',
        11),
        ('View|0|.__init__|0|',
         18)],
        'code-line': '            if scene:\n',
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 868,
        'selection_end': 889,
        'selection_start': 889,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'to the tag\'s context menu, and then "Remove property".\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 1163,
        'selection_end': 1217,
        'selection_start': 1217,
        'zoom': 0},
                       loc('core/qt_pickle_utility.py'): {'attrib-starts': [],
        'code-line': 'from PyQt5.QtGui import QBrush, QPen\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 36,
        'selection_start': 36,
        'zoom': 0},
                       loc('core/unicode_utility.py'): {'attrib-starts': [],
        'code-line': 'def ascii_letters_to_script(ascii_letters: str, bold: bool = False) -> str:\r\n',
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 948,
        'selection_end': 948,
        'selection_start': 948,
        'zoom': 0},
                       loc('core/utility.py'): {'attrib-starts': [('closest_point_on_path|0|',
        12)],
        'code-line': '    return minVec.toPointF()\r\n',
        'first-line': 25,
        'folded-linenos': [],
        'sel-line': 50,
        'sel-line-start': 1375,
        'selection_end': 1403,
        'selection_start': 1403,
        'zoom': 0},
                       loc('gfx/__init__.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('gfx/arrow.py'): {'attrib-starts': [('Arrow|0|',
        11),
        ('Arrow|0|.compute_line_path|0|',
         149)],
        'code-line': '                path.cubicTo(self._points[1].pos(), self._points[2].pos(), self._points[3].pos())\r\n',
        'first-line': 165,
        'folded-linenos': [],
        'sel-line': 173,
        'sel-line-start': 6342,
        'selection_end': 6390,
        'selection_start': 6386,
        'zoom': 0},
                       loc('gfx/base.py'): {'attrib-starts': [('Base|0|',
        7),
        ('Base|0|.__repr__|0|',
         68)],
        'code-line': "        return f'{self.text()}:Base(@{id(self)}'\r\n",
        'first-line': 56,
        'folded-linenos': [],
        'sel-line': 69,
        'sel-line-start': 2082,
        'selection_end': 2082,
        'selection_start': 2082,
        'zoom': 0},
                       loc('gfx/connect_button.py'): {'attrib-starts': [('ConnectButton|0|',
        3)],
        'code-line': '    def set_radius(self, radius: float):\r\n',
        'first-line': 34,
        'folded-linenos': [],
        'sel-line': 45,
        'sel-line-start': 1247,
        'selection_end': 1259,
        'selection_start': 1259,
        'zoom': 0},
                       loc('gfx/control_point.py'): {'attrib-starts': [('ControlPoint|0|',
        7)],
        'code-line': '    def set_radius(self, radius):\r\n',
        'first-line': 53,
        'folded-linenos': [],
        'sel-line': 57,
        'sel-line-start': 1951,
        'selection_end': 1963,
        'selection_start': 1963,
        'zoom': 0},
                       loc('gfx/directed_graph.py'): {'attrib-starts': [('DirectedGraph|0|',
        5),
        ('DirectedGraph|0|.arrow_type|0|',
         54)],
        'code-line': '        \r\n',
        'first-line': 49,
        'folded-linenos': [],
        'sel-line': 56,
        'sel-line-start': 1973,
        'selection_end': 1981,
        'selection_start': 1981,
        'zoom': 0},
                       loc('gfx/graph_morphism.py'): {'attrib-starts': [('GraphMorphism|0|',
        9),
        ('GraphMorphism|0|.take_image|0|',
         27)],
        'code-line': '        for X in D.nodes():\r\n',
        'first-line': 34,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1536,
        'selection_end': 1536,
        'selection_start': 1536,
        'zoom': 0},
                       loc('gfx/label.py'): {'attrib-starts': [('Label|0|',
        4),
        ('Label|0|.__repr__|0|',
         45)],
        'code-line': "        return f'{self.text()}:Label(@{id(self)})'\r\n",
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 46,
        'sel-line-start': 1175,
        'selection_end': 1204,
        'selection_start': 1204,
        'zoom': 0},
                       loc('gfx/node.py'): {'attrib-starts': [('Node|0|',
        8),
        ('Node|0|.shape|0|',
         264)],
        'code-line': '        r = self.corner_radius()\r\n',
        'first-line': 244,
        'folded-linenos': [],
        'sel-line': 267,
        'sel-line-start': 9606,
        'selection_end': 9638,
        'selection_start': 9638,
        'zoom': 0},
                       loc('gfx/object.py'): {'attrib-starts': [],
        'code-line': 'class Object(Node):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 29,
        'selection_end': 41,
        'selection_start': 35,
        'zoom': 0},
                       loc('gfx/semicategory.py'): {'attrib-starts': [('Semicategory|0|',
        2)],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 76,
        'selection_end': 76,
        'selection_start': 76,
        'zoom': 0},
                       loc('gfx/view.py'): {'attrib-starts': [('View|0|',
        3),
        ('View|0|.zoom_out|0|',
         47)],
        'code-line': '        else:\r\n',
        'first-line': 50,
        'folded-linenos': [],
        'sel-line': 54,
        'sel-line-start': 1796,
        'selection_end': 1809,
        'selection_start': 1809,
        'zoom': 0},
                       loc('main.py'): {'attrib-starts': [],
        'code-line': '    window.show()\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 434,
        'selection_end': 435,
        'selection_start': 435,
        'zoom': 0},
                       loc('math/main.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('mathlib/__init__.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('mathlib/builtins.py'): {'attrib-starts': [('initialize_builtins|0|',
        8)],
        'code-line': '    BigCat = Semicategory("𝐁𝐢𝐠𝐂𝐚𝐭", objects=DirectedGraph("𝓒", node_type=Node("A"), arrow_type=Arrow("a")), morphisms=GraphMorphism("F"))\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 318,
        'selection_end': 433,
        'selection_start': 433,
        'zoom': 0},
                       loc('mathlib/directed_graph.py'): {'attrib-starts': [],
        'code-line': 'from math.object import Object\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 16,
        'selection_start': 16,
        'zoom': 0},
                       loc('mathlib/morphism.py'): {'attrib-starts': [('Morphism|0|',
        3),
        ('Morphism|0|.dom|0|',
         15)],
        'code-line': '        return self.source()\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 488,
        'selection_end': 516,
        'selection_start': 516,
        'zoom': 0},
                       loc('mathlib/object.py'): {'attrib-starts': [('Object|0|',
        2),
        ('Object|0|.finish_setup|0|',
         9)],
        'code-line': '    \r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 280,
        'selection_end': 284,
        'selection_start': 284,
        'zoom': 0},
                       loc('mathlib/semicategory.py'): {'attrib-starts': [('Semicategory|0|',
        7),
        ('Semicategory|0|._arrowCantConnect|0|',
         49)],
        'code-line': '        if not isinstance(other_end, self.node_type().__class__):\r\n',
        'first-line': 38,
        'folded-linenos': [],
        'sel-line': 54,
        'sel-line-start': 1719,
        'selection_end': 1770,
        'selection_start': 1761,
        'zoom': 0},
                       loc('prime_gaps.py'): {'attrib-starts': [],
        'code-line': '        assert 0',
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 40,
        'sel-line-start': 1058,
        'selection_end': 1058,
        'selection_start': 1058,
        'zoom': 4},
                       loc('requirements.txt'): {'attrib-starts': [],
        'code-line': 'PyQt5\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
proj.pypath = {None: ('custom',
                      ['C:/Users/fruit/OneDrive/Desktop/Diagram Detective'])}
proj.test-launch-config = {None: ('project',
                                  ('',
                                   'launch-8CBqACP6z2yRuzEt'))}
proj.vcs-system-config = ('prefs',
                          {'cvs': {'versioncontrol.cvs.active': 'active-if-project-dir',
                                   'versioncontrol.cvs.executable': 'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-z3'},
                           'git': {'versioncontrol.git.active': 'active-if-project-dir',
                                   'versioncontrol.git.executable': 'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-project-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': 'hg',
                                  'versioncontrol.hg.extra-global-args': '--encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'not-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': 'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-project-dir',
                                   'versioncontrol.svn.executable': 'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': 'svnadmin'}})
search.search-history = ['PyQt5.',
                         'Pyq',
                         'def paint(',
                         'paint(',
                         'paint',
                         'parent_graph.',
                         '.source',
                         '= self.source',
                         'self',
                         'self.',
                         'self.source =',
                         'self.source = ',
                         'se',
                         '.target = ',
                         '.source = ',
                         '@property',
                         '.pos',
                         '.p',
                         '.',
                         '@']
testing.stored-results = (1,
                          [],
                          {})
